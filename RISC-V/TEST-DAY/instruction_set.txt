R-type
func7(7) + rs2(5) + rs1(5) + func3(3) + rd(5) + opcode(7)
//add	----	x7 = x6 + x5
0000000_(x5)_(x6)_000_(x7)_0110011
//sub	----	x7 = x6 - x5
0100000_(x5)_(x6)_000_(x7)_0110011
//and
0000000_()_()_111_()_0110011
//or
0000000_()_()_110_()_0110011
//xor
0000000_()_()_100_()_0110011
--------------------------------------------------------------------
I-type
imm(12) + rs1(5) + func3(3) + rd(5) + opcode(7)
//addi
000000000000_(x5)_000_(x6)_0010011
//xor_i --- (NOT)
111111111111_()_100_()_0010011
//load double --- load mem[rs1+imm] in R[31]
000000000000_()_011_()_0000011
//load word
000000000000_()_010_()_0000011
//jalr
000000000000_()_000_()_1100111

func6(6) + imm(6) + rs1(5) + func3(3) + rd(5) + opcode(7)
//sll_i
000000_000001_()_001_()_0010011
//srl_i
000000_000001_()_101_()_0010011
//sra_i
010000_000001_()_101_()_0010011
---------------------------------------------------------------------
S-type	---	MEM(rs1+imm)<-R[rs2]
imm1(7) + rs2(5) + rs1(5) + func3(3) + imm2(5) + opcode(7)
//store double
0000000_(x31)_(x0)_111_00001_0100011
---------------------------------------------------------------------
SB-type
imm12_10:5(7) + rs2(5) + rs1(5) + func3(3) + imm4:1_11(5) + opcode(7)
//beq
0_000000_()_()_000_0100_0_1100011
---------------------------------------------------------------------
UJ-type
imm20_10:1_11_19:12(20)
//jal
0_0000000000_0_00000000_()_1101111
-----------------------------------------------------------------------
0_0000000100_0_00000000_00001_1101111	//jal x1 8
0_000000_00111_00110_001_0110_0_1100011	//bne x7 x6 6
0000000_00101_00110_000_00111_0110011	//add x7 x6 x5
000000000000_00001_000_00000_1100111	//jalr x0 0 x1
000000000000_00110_000_00111_0010011	//addi x7 x6 0
------------------------------------------------------------------
111111111111_00000_000_11111_0010011	0	addi  x31, x0, FFFFFFFFâ€¦F
0000000_00000_00000_000_11101_0110011	4	add  x29, x0, x0
000000001010_00000_000_11100_0010011	8	addi x28 x0 10
000000000000_11101_011_00101_0000011	12	ld    x5, 0 (x29)
0000000_11111_00101_100_00101_0110011	16	xor   x5, x5, x31 
0000000_00101_11101_111_00000_0100011	20	sd    x5, 0 (x29) 
000000000001_11101_000_11101_0010011	24	addi  x29, x29, 8
111111111111_11100_000_11100_0010011	28	addi x28 x28 -1 
1_111111_11100_00000_001_1011_1_1100011	32	BNE   x28, $zero, Loop
----------------------
0000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000010
0000000000000000000000000000000000000000000000000000000000000011
0000000000000000000000000000000000000000000000000000000000000100
0000000000000000000000000000000000000000000000000000000000000101
0000000000000000000000000000000000000000000000000000000000000110
0000000000000000000000000000000000000000000000000000000000000111
0000000000000000000000000000000000000000000000000000000000001000
0000000000000000000000000000000000000000000000000000000000001001
0000000000000000000000000000000000000000000000000000000000001010
